name: Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Run Tests
        run: ./script/test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./shared/jacoco/jacocoTestReport.xml

  code-check:
    name: Code Check
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Static Analysis
        run: ./gradlew

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [test, code-check]

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Master Docker image
      if: github.ref == 'refs/heads/master'
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          bmanley/kotlin-api-template:latest
          bmanley/kotlin-api-template:1.0.${{ github.run_id }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and Push Dev Docker image
      if: github.ref != 'refs/heads/master'
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: bmanley/kotlin-api-template:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Test Environment
    runs-on: ubuntu-latest
    needs: [build]
#      if: github.ref == 'refs/heads/master'

    steps:
    - name: Login to Test Environment
      uses: actions/checkout@v3

    - name: Upload to S3
      run: |
        aws cloudformation update-stack \
          --stack-name kotlin-api-template-service \
          --template-body file://cloudformation/service.yml \
          --region us-east-1 \
          --parameters \
          ParameterKey=NetworkStackName,ParameterValue=kotlin-api-template-network \
          ParameterKey=ServiceName,ParameterValue=kotlin-api-template \
          ParameterKey=ImageUrl,ParameterValue=docker.io/bmanley/kotlin-api-template:1.0.${{ github.run_id }} \
          ParameterKey=ContainerPort,ParameterValue=8080 \
          ParameterKey=HealthCheckPath,ParameterValue=/api/health \
          ParameterKey=HealthCheckIntervalSeconds,ParameterValue=90 \
          ParameterKey=DatabaseStackName,ParameterValue=kotlin-api-template-database \
          ParameterKey=DesiredCount,ParameterValue=2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'us-east-1'
